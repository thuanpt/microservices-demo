version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: microservices_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_USER: microservices
      MYSQL_PASSWORD: microservices123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # User Service
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user_service
    restart: unless-stopped
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=microservices
      - DB_PASS=microservices123
      - DB_NAME=user_service_db
      - APP_PORT=8001
      - JWT_SECRET=your-secret-key-change-this-in-production
    ports:
      - "8001:8001"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Product Service  
  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    container_name: product_service
    restart: unless-stopped
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=microservices
      - DB_PASS=microservices123
      - DB_NAME=product_service_db
      - APP_PORT=8002
    ports:
      - "8002:8002"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Order Service
  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    container_name: order_service
    restart: unless-stopped
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=microservices
      - DB_PASS=microservices123
      - DB_NAME=order_service_db
      - APP_PORT=8003
      - USER_SERVICE_URL=http://user-service:8001
      - PRODUCT_SERVICE_URL=http://product-service:8002
    ports:
      - "8003:8003"
    depends_on:
      user-service:
        condition: service_healthy
      product-service:
        condition: service_healthy
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API Gateway
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api_gateway
    restart: unless-stopped
    environment:
      - GATEWAY_PORT=8000
      - USER_SERVICE_URL=http://user-service:8001
      - PRODUCT_SERVICE_URL=http://product-service:8002
      - ORDER_SERVICE_URL=http://order-service:8003
      - JWT_SECRET=your-secret-key-change-this-in-production
    ports:
      - "8000:8000"
    depends_on:
      user-service:
        condition: service_healthy
      product-service:
        condition: service_healthy
      order-service:
        condition: service_healthy
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

# Networks
networks:
  microservices-network:
    driver: bridge

# Volumes
volumes:
  mysql_data:
    driver: local